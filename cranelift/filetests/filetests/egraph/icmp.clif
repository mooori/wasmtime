test optimize precise-output
set opt_level=speed
target x86_64

;; Masking the result of a comparison with 1 always results in the comparison
;; itself (comparisons in wasm may sometimes be hidden behind extensions):
function %mask_icmp_result(i64, i64) -> i8 {
block0(v1: i64, v2: i64):
    v3 = icmp ult v1, v2
    v4 = iconst.i8 1
    v5 = band v3, v4
    return v5
}

; function %mask_icmp_result(i64, i64) -> i8 fast {
; block0(v1: i64, v2: i64):
;     v3 = icmp ult v1, v2
;     return v3
; }

function %mask_icmp_extend_result(i64, i64) -> i64 {
block0(v1: i64, v2: i64):
    v3 = icmp ult v1, v2
    v4 = uextend.i64 v3
    v5 = iconst.i64 1
    v6 = band v4, v5
    return v6
}

; function %mask_icmp_extend_result(i64, i64) -> i64 fast {
; block0(v1: i64, v2: i64):
;     v3 = icmp ult v1, v2
;     v4 = uextend.i64 v3
;     return v4
; }

function %icmp_simplify_does_not_build_iconst_i128() -> i8 {
block0:
    v0 = iconst.i64 0x6350_5050_5050_3750
    v1 = iconcat v0, v0
    v2 = bmask.i8 v1
    v3 = iconst.i8 0
    v4 = icmp ugt v2, v3
    return v4
}

; function %icmp_simplify_does_not_build_iconst_i128() -> i8 fast {
; block0:
;     v0 = iconst.i64 0x6350_5050_5050_3750
;     v1 = iconcat v0, v0  ; v0 = 0x6350_5050_5050_3750, v0 = 0x6350_5050_5050_3750
;     v2 = bmask.i8 v1
;     v3 = iconst.i8 0
;     v5 = icmp ne v2, v3  ; v3 = 0
;     return v5
; }
