start:
  zkPC + 2 => RR
  :JMP(function_1)
  :JMP(finalizeExecution)
function_1:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 4 => SP
  C :MSTORE(SP - 1)
  D :MSTORE(SP - 2)
  E :MSTORE(SP - 3)
  B :MSTORE(SP - 4)
  214748364n => A  ;; LoadConst64(214748364)
  A => E
  107374183n => A  ;; LoadConst64(107374183)
  2n => B  ;; LoadConst64(2)
  0 => D
  0 => C
  $${var _mulArith = A * B}
  ${_mulArith / 18446744073709551616} => D
  ${_mulArith % 18446744073709551616} => B :ARITH
  E => A
  0 => D
  0 => C
  $${var _mulArith = A * B}
  ${_mulArith / 18446744073709551616} => D
  ${_mulArith % 18446744073709551616} => E :ARITH
  214748364n => B  ;; LoadConst64(214748364)
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  214748366n => B  ;; LoadConst64(214748366)
  B :ASSERT
  $ => C :MLOAD(SP - 1)
  $ => D :MLOAD(SP - 2)
  $ => E :MLOAD(SP - 3)
  $ => B :MLOAD(SP - 4)
  SP - 4 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
finalizeExecution:
  ${beforeLast()}  :JMPN(finalizeExecution)
                   :JMP(start)
INCLUDE "helpers/2-exp.zkasm"