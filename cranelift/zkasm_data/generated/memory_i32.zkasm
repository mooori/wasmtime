start:
  0 => E
  7523094288207667809n :MSTORE(MEM:E + 0)
  8101815670912281193n :MSTORE(MEM:E + 1)
  8680537053616894577n :MSTORE(MEM:E + 2)
  31353n :MSTORE(MEM:E + 3)
  0xffff => SP
  zkPC + 2 => RR
  :JMP(function_1)
  :JMP(finalizeExecution)
function_1:
  RR :MSTORE(SP)
  SP - 1 => SP
  E :MSTORE(SP - 1)
  B :MSTORE(SP - 2)
  SP - 2 => SP
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  97n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  97n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 1)
  98n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 2)
  99n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 25)
  122n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  97n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  97n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 1)
  98n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 2)
  99n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 25)
  122n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  25185n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  25185n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 1)
  25442n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 2)
  25699n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 25)
  122n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  25185n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  25185n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 1)
  25442n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 2)
  25699n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 25)
  122n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  1684234849n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E)
  1684234849n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 1)
  1701077858n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 2)
  1717920867n => B  ;; LoadConst32
  B :ASSERT
  0n => B  ;; LoadConst32
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => A :MLOAD(MEM:E + 25)
  122n => B  ;; LoadConst32
  B :ASSERT
  SP + 2 => SP
  $ => E :MLOAD(SP - 1)
  $ => B :MLOAD(SP - 2)
  SP + 1 => SP
  $ => RR :MLOAD(SP)
  :JMP(RR)
finalizeExecution:
  ${beforeLast()}  :JMPN(finalizeExecution)
                   :JMP(start)
INCLUDE "helpers/2-exp.zkasm"