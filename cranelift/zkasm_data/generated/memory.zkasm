start:
  zkPC + 2 => RR
  :JMP(function_1)
  :JMP(finalizeExecution)
function_1:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 5 => SP
  C :MSTORE(SP - 1)
  D :MSTORE(SP - 2)
  E :MSTORE(SP - 3)
  B :MSTORE(SP - 4)
  0n => E  ;; LoadConst32(0)
  8589934592n => D  ;; LoadConst32(2)
  D :MSTORE(SP)
  4294967296n => B
  0 => D
  0 => C
  ${E / B} => A
  E:ARITH
  A => B
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => D :MLOAD(SP)
  ${ E >> 32 } => E
  D :MSTORE(MEM:E)
  34359738368n => E  ;; LoadConst32(8)
  12884901888n => B  ;; LoadConst32(3)
  B :MSTORE(SP)
  4294967296n => B
  0 => D
  0 => C
  ${E / B} => A
  E:ARITH
  A => B
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  $ => B :MLOAD(SP)
  ${ E >> 32 } => E
  B :MSTORE(MEM:E)
  0n => E  ;; LoadConst32(0)
  4294967296n => B
  0 => D
  0 => C
  ${E / B} => A
  E:ARITH
  A => B
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  ${ E >> 32 } => E
  $ => A :MLOAD(MEM:E)
  A :MSTORE(SP)
  34359738368n => E  ;; LoadConst32(8)
  4294967296n => B
  0 => D
  0 => C
  ${E / B} => A
  E:ARITH
  A => B
  0 => A  ;; LoadExtName(User(userextname0))
  $ => E :ADD
  ${ E >> 32 } => E
  $ => B :MLOAD(MEM:E)
  $ => A :MLOAD(SP)
  $ => A :ADD
  21474836480n => B  ;; LoadConst32(5)
  B :ASSERT
  $ => C :MLOAD(SP - 1)
  $ => D :MLOAD(SP - 2)
  $ => E :MLOAD(SP - 3)
  $ => B :MLOAD(SP - 4)
  SP - 5 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
finalizeExecution:
  ${beforeLast()}  :JMPN(finalizeExecution)
                   :JMP(start)
INCLUDE "helpers/2-exp.zkasm"