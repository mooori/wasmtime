start:
  zkPC + 2 => RR
  :JMP(function_1)
  :JMP(finalizeExecution)
function_1:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 4 => SP
  C :MSTORE(SP - 1)
  D :MSTORE(SP - 2)
  E :MSTORE(SP - 3)
  B :MSTORE(SP - 4)
  5n => E
  2n => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  C => A
  1n => B
  B :ASSERT
  $ => C :MLOAD(SP - 1)
  $ => D :MLOAD(SP - 2)
  $ => E :MLOAD(SP - 3)
  $ => B :MLOAD(SP - 4)
  SP - 4 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
finalizeExecution:
  ${beforeLast()}  :JMPN(finalizeExecution)
                   :JMP(start)
two_power:
  1n => B                                                                :JMP(RR) ;2**0
  2n => B                                                                :JMP(RR) ;2**1
  4n => B                                                                :JMP(RR) ;2**2
  8n => B                                                                :JMP(RR) ;2**3
  10n => B                                                                :JMP(RR) ;2**4
  20n => B                                                                :JMP(RR) ;2**5
  40n => B                                                                :JMP(RR) ;2**6
  80n => B                                                                :JMP(RR) ;2**7
  100n => B                                                                :JMP(RR) ;2**8
  200n => B                                                                :JMP(RR) ;2**9
  400n => B                                                                :JMP(RR) ;2**10
  800n => B                                                                :JMP(RR) ;2**11
  1000n => B                                                                :JMP(RR) ;2**12
  2000n => B                                                                :JMP(RR) ;2**13
  4000n => B                                                                :JMP(RR) ;2**14
  8000n => B                                                                :JMP(RR) ;2**15
  10000n => B                                                                :JMP(RR) ;2**16
  20000n => B                                                                :JMP(RR) ;2**17
  40000n => B                                                                :JMP(RR) ;2**18
  80000n => B                                                                :JMP(RR) ;2**19
  100000n => B                                                                :JMP(RR) ;2**20
  200000n => B                                                                :JMP(RR) ;2**21
  400000n => B                                                                :JMP(RR) ;2**22
  800000n => B                                                                :JMP(RR) ;2**23
  1000000n => B                                                                :JMP(RR) ;2**24
  2000000n => B                                                                :JMP(RR) ;2**25
  4000000n => B                                                                :JMP(RR) ;2**26
  8000000n => B                                                                :JMP(RR) ;2**27
  10000000n => B                                                                :JMP(RR) ;2**28
  20000000n => B                                                                :JMP(RR) ;2**29
  40000000n => B                                                                :JMP(RR) ;2**30
  80000000n => B                                                                :JMP(RR) ;2**31
  100000000n => B                                                                :JMP(RR) ;2**32
  200000000n => B                                                                :JMP(RR) ;2**33
  400000000n => B                                                                :JMP(RR) ;2**34
  800000000n => B                                                                :JMP(RR) ;2**35
  1000000000n => B                                                                :JMP(RR) ;2**36
  2000000000n => B                                                                :JMP(RR) ;2**37
  4000000000n => B                                                                :JMP(RR) ;2**38
  8000000000n => B                                                                :JMP(RR) ;2**39
  10000000000n => B                                                                :JMP(RR) ;2**40
  20000000000n => B                                                                :JMP(RR) ;2**41
  40000000000n => B                                                                :JMP(RR) ;2**42
  80000000000n => B                                                                :JMP(RR) ;2**43
  100000000000n => B                                                                :JMP(RR) ;2**44
  200000000000n => B                                                                :JMP(RR) ;2**45
  400000000000n => B                                                                :JMP(RR) ;2**46
  800000000000n => B                                                                :JMP(RR) ;2**47
  1000000000000n => B                                                                :JMP(RR) ;2**48
  2000000000000n => B                                                                :JMP(RR) ;2**49
  4000000000000n => B                                                                :JMP(RR) ;2**50
  8000000000000n => B                                                                :JMP(RR) ;2**51
  10000000000000n => B                                                                :JMP(RR) ;2**52
  20000000000000n => B                                                                :JMP(RR) ;2**53
  40000000000000n => B                                                                :JMP(RR) ;2**54
  80000000000000n => B                                                                :JMP(RR) ;2**55
  100000000000000n => B                                                                :JMP(RR) ;2**56
  200000000000000n => B                                                                :JMP(RR) ;2**57
  400000000000000n => B                                                                :JMP(RR) ;2**58
  800000000000000n => B                                                                :JMP(RR) ;2**59
  1000000000000000n => B                                                                :JMP(RR) ;2**60
  2000000000000000n => B                                                                :JMP(RR) ;2**61
  4000000000000000n => B                                                                :JMP(RR) ;2**62